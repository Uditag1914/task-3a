from zapv2 import ZAPv2
import time

# Configuration
ZAP_API_KEY = 'your_api_key'  # Replace with your ZAP API key
ZAP_HOST = 'http://localhost'
ZAP_PORT = '8080'
TARGET_URL = 'http://example.com'  # Replace with the target application URL

def perform_security_scan(target_url):
    zap = ZAPv2(apikey=ZAP_API_KEY, proxies={'http': f'{ZAP_HOST}:{ZAP_PORT}', 'https': f'{ZAP_HOST}:{ZAP_PORT}'})
    
    print(f"Starting security scan for {target_url}")
    
    # Start spidering the target
    print("Spidering the target...")
    spider_id = zap.spider.scan(target_url)
    while int(zap.spider.status(spider_id)) < 100:
        print(f"Spider progress: {zap.spider.status(spider_id)}%")
        time.sleep(2)
    print("Spider completed.")
    
    # Start an active scan
    print("Starting active scan...")
    active_scan_id = zap.ascan.scan(target_url)
    while int(zap.ascan.status(active_scan_id)) < 100:
        print(f"Active scan progress: {zap.ascan.status(active_scan_id)}%")
        time.sleep(5)
    print("Active scan completed.")
    
    # Retrieve scan results
    print("Retrieving scan results...")
    alerts = zap.core.alerts(baseurl=target_url)
    
    if not alerts:
        print("No vulnerabilities found.")
    else:
        print(f"Found {len(alerts)} vulnerabilities:")
        for alert in alerts:
            print(f"\n[Risk: {alert['risk']}]\nAlert: {alert['alert']}\nDescription: {alert['desc']}\nSolution: {alert['solution']}\n")

# Run the security scan
if __name__ == "__main__":
    try:
        perform_security_scan(TARGET_URL)
    except Exception as e:
        print(f"Error: {e}")
